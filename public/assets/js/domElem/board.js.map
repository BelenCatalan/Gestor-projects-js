{"version":3,"names":[],"mappings":"","sources":["domElem/board.js"],"sourcesContent":["import cards from './cards.js';\nimport helper from './helpers.js';\n\nconst renderPaint = (data) => {\n  const newBoard = document.querySelector('.js-newboard');\n  data.forEach((list) => {\n    //refactorizar renderPaint\n    const divListElem = helper.addElement(newBoard, {\n      label: 'div',\n      class: ['app-list'],\n    });\n\n    const listContainer = helper.addElement(divListElem, {\n      label: 'div',\n      class: ['p-1', 'rounded-sm', 'bg-primary', 'shadow'],\n    });\n\n    const listForm = helper.addElement(listContainer, {\n      laberl: 'form',\n      class: ['app-list-form', 'align-middle', 'p-1', 'position-relative'],\n    });\n\n    const inputForm = helper.addElement(listForm, {\n      label: 'input',\n      class: ['app-list-input', 'form-control', 'form-control-sm'],\n      attributes: {\n        placeholder: 'Tareas importantes',\n        type: 'text',\n        value: list.title,\n        title: 'Editar el título de la lista',\n      },\n    });\n\n    const optionsContainer = helper.addElement(listForm, {\n      label: 'div',\n      class: ['app-list-options'],\n    });\n\n    const iconOption = helper.addElement(optionsContainer, {\n      label: 'span',\n      class: ['pl-2', 'pr-2', 'text-white-50', 'fas', 'fa-ellipsis-v'],\n    });\n\n    const btnOptContainer = helper.addElement(optionsContainer, {\n      label: 'div',\n      class: ['app-list-btns', 'btn-group', 'btn-group-sm'],\n    });\n    const btnDeleteList = helper.addElement(btnOptContainer, {\n      label: 'button',\n      class: ['js-delete', 'btn', 'btn-light', 'text-muted', 'border', 'shadow-sm'],\n      attributes: { title: 'Borrar esta tarjeta', type: 'button', id: list.id },\n    });\n    const icondelete = helper.addElement(btnDeleteList, {\n      label: 'span',\n      class: ['fas', 'fa-trash-alt'],\n    });\n    const btnLeft = helper.addElement(btnOptContainer, {\n      label: 'button',\n      class: ['js-move-left', 'btn', 'btn-light', 'text-muted', 'border', 'shadow-sm', 'app-list-move-left'],\n      attributes: { title: 'Mover lista izquierda', type: 'button', id: list.id },\n    });\n    const iconLeft = helper.addElement(btnLeft, {\n      label: 'span',\n      class: ['fas', 'fa-arrow-left'],\n    });\n\n    const btnRight = helper.addElement(btnOptContainer, {\n      label: 'button',\n      class: ['js-move-right', 'btn', 'btn-light', 'text-muted', 'border', 'shadow-sm', 'app-list-move-left'],\n      attributes: { title: 'Mover lista derecha', type: 'button', id: list.id },\n    });\n    helper.addElement(btnRight, {\n      label: 'span',\n      class: ['fas', 'fa-arrow-right'],\n    });\n\n    cards.paintCards(listContainer, list.card);\n    //code before refactor\n    // const divListElem = document.createElement('div');\n    // divListElem.classList.add('app-list');\n    // newBoard.appendChild(divListElem);\n\n    // const listContainer = document.createElement('div');\n    // listContainer.classList.add('p-1', 'rounded-sm', 'bg-primary', 'shadow');\n    // divListElem.appendChild(listContainer);\n\n    // const form = document.createElement('form');\n    // form.classList.add('app-list-form', 'align-middle', 'p-1', 'position-relative');\n    // listContainer.appendChild(form);\n\n    // const inputForm = document.createElement('input');\n    // inputForm.classList.add('app-list-input', 'form-control', 'form-control-sm');\n    // Object.assign(inputForm, {\n    //   placeholder: 'Tareas importantes',\n    //   type: 'text',\n    //   value: list.title,\n    //   title: 'Editar el título de la lista',\n    // });\n    // listForm.appendChild(inputForm);\n    addNewCard(listContainer, list);\n  });\n  addNewList(newBoard);\n};\nconst addNewList = (parent) => {\n  const btnNewListContainer = helper.addElement(parent, {\n    label: 'div',\n    class: '',\n  });\n  const btnNewList = helper.addElement(btnNewListContainer, {\n    label: 'button',\n    class: ['js-new-listbtn', 'btn-light', 'btn-outline-primary', 'btn-sm', 'mr-5', 'shadow-sm'],\n    attributes: { type: 'button', title: 'añadir lista' },\n  });\n  helper.addElement(btnNewList, {\n    label: 'span',\n    class: ['fas', 'fa-plus'],\n  });\n};\n\nconst addNewCard = (parent, list) => {\n  const btnAddCard = helper.addElement(parent, {\n    label: 'button',\n    class: ['js-new-card', 'ml-1', 'btn', 'btn-primary', 'btn-sm', 'text-white-50'],\n    attributes: { title: 'Añadir Tarjeta', type: 'button', id: list.id },\n  });\n  helper.addElement(btnAddCard, {\n    label: 'span',\n    class: ['fas', 'fa-plus'],\n    text: ' Añadir otra tarjeta',\n  });\n};\n\nexport default {\n  renderPaint,\n};\n"],"file":"board.js"}